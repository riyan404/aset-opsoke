{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///home/riyan404/aset-opsoke/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  // Memory optimization: Configure connection pooling\n  datasources: {\n    db: {\n      url: process.env.DATABASE_URL\n    }\n  },\n  // Reduce memory usage with optimized logging\n  log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n  // Connection pool optimization for memory efficiency\n  __internal: {\n    engine: {\n      // Limit connection pool size to reduce memory usage\n      connectionLimit: 5,\n    }\n  }\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY,CAAC;IAC/D,oDAAoD;IACpD,aAAa;QACX,IAAI;YACF,KAAK,QAAQ,GAAG,CAAC,YAAY;QAC/B;IACF;IACA,6CAA6C;IAC7C,KAAK,uCAAyC;QAAC;QAAS;QAAS;KAAO,GAAG;IAC3E,qDAAqD;IACrD,YAAY;QACV,QAAQ;YACN,oDAAoD;YACpD,iBAAiB;QACnB;IACF;AACF;AAEA,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///home/riyan404/aset-opsoke/src/lib/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport jwt from 'jsonwebtoken'\n\nexport interface AuthenticatedRequest extends NextRequest {\n  user?: {\n    id: string\n    email: string\n    role: string\n    department?: string\n  }\n}\n\nexport function verifyToken(token: string) {\n  try {\n    return jwt.verify(token, process.env.JWT_SECRET!)\n  } catch (error) {\n    return null\n  }\n}\n\nexport function generateToken(payload: any) {\n  return jwt.sign(payload, process.env.JWT_SECRET!, { expiresIn: '1d' })\n}\n\nexport function withAuth(handler: (req: AuthenticatedRequest, context?: any) => Promise<NextResponse>) {\n  return async (req: AuthenticatedRequest, context?: any) => {\n    const authHeader = req.headers.get('authorization')\n    console.log('Middleware: Authorization header:', authHeader)\n    \n    const token = authHeader?.replace('Bearer ', '')\n    console.log('Middleware: Extracted token:', token ? 'Token exists' : 'No token')\n    \n    if (!token) {\n      console.log('Middleware: No token provided')\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n    }\n\n    const decoded = verifyToken(token) as any\n    console.log('Middleware: Token verification result:', decoded ? 'Valid' : 'Invalid')\n    \n    if (!decoded) {\n      console.log('Middleware: Invalid token')\n      return NextResponse.json({ error: 'Invalid token' }, { status: 401 })\n    }\n\n    req.user = decoded\n    return handler(req, context)\n  }\n}\n\nexport function withRole(roles: string[]) {\n  return function(handler: (req: AuthenticatedRequest, context?: any) => Promise<NextResponse>) {\n    return withAuth(async (req: AuthenticatedRequest, context?: any) => {\n      if (!req.user || !roles.includes(req.user.role)) {\n        return NextResponse.json({ error: 'Forbidden' }, { status: 403 })\n      }\n      return handler(req, context)\n    })\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAWO,SAAS,YAAY,KAAa;IACvC,IAAI;QACF,OAAO,kJAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU;IACjD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,OAAY;IACxC,OAAO,kJAAG,CAAC,IAAI,CAAC,SAAS,QAAQ,GAAG,CAAC,UAAU,EAAG;QAAE,WAAW;IAAK;AACtE;AAEO,SAAS,SAAS,OAA4E;IACnG,OAAO,OAAO,KAA2B;QACvC,MAAM,aAAa,IAAI,OAAO,CAAC,GAAG,CAAC;QACnC,QAAQ,GAAG,CAAC,qCAAqC;QAEjD,MAAM,QAAQ,YAAY,QAAQ,WAAW;QAC7C,QAAQ,GAAG,CAAC,gCAAgC,QAAQ,iBAAiB;QAErE,IAAI,CAAC,OAAO;YACV,QAAQ,GAAG,CAAC;YACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,UAAU,YAAY;QAC5B,QAAQ,GAAG,CAAC,0CAA0C,UAAU,UAAU;QAE1E,IAAI,CAAC,SAAS;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QACrE;QAEA,IAAI,IAAI,GAAG;QACX,OAAO,QAAQ,KAAK;IACtB;AACF;AAEO,SAAS,SAAS,KAAe;IACtC,OAAO,SAAS,OAA4E;QAC1F,OAAO,SAAS,OAAO,KAA2B;YAChD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG;gBAC/C,OAAO,gJAAY,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAAY,GAAG;oBAAE,QAAQ;gBAAI;YACjE;YACA,OAAO,QAAQ,KAAK;QACtB;IACF;AACF","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/riyan404/aset-opsoke/src/lib/audit.ts"],"sourcesContent":["import { prisma } from '@/lib/prisma'\n\nexport async function logActivity(\n  userId: string,\n  action: string,\n  resource: string,\n  resourceId?: string,\n  oldValues?: any,\n  newValues?: any,\n  ipAddress?: string,\n  userAgent?: string\n) {\n  try {\n    await prisma.auditLog.create({\n      data: {\n        userId,\n        action,\n        resource,\n        resourceId,\n        oldValues: oldValues ? JSON.stringify(oldValues) : null,\n        newValues: newValues ? JSON.stringify(newValues) : null,\n        ipAddress,\n        userAgent,\n      },\n    })\n  } catch (error) {\n    console.error('Failed to log activity:', error)\n  }\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,YACpB,MAAc,EACd,MAAc,EACd,QAAgB,EAChB,UAAmB,EACnB,SAAe,EACf,SAAe,EACf,SAAkB,EAClB,SAAkB;IAElB,IAAI;QACF,MAAM,gIAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC3B,MAAM;gBACJ;gBACA;gBACA;gBACA;gBACA,WAAW,YAAY,KAAK,SAAS,CAAC,aAAa;gBACnD,WAAW,YAAY,KAAK,SAAS,CAAC,aAAa;gBACnD;gBACA;YACF;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;IAC3C;AACF","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///home/riyan404/aset-opsoke/src/app/api/assets/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { prisma } from '@/lib/prisma'\nimport { withAuth } from '@/lib/middleware'\nimport { logActivity } from '@/lib/audit'\n\n// Create asset\nexport const POST = withAuth(async (request: NextRequest) => {\n  try {\n    const {\n      name,\n      description,\n      category,\n      subcategory,\n      brand,\n      model,\n      serialNumber,\n      purchaseDate,\n      purchasePrice,\n      currentValue,\n      condition,\n      location,\n      department,\n      assignedTo,\n      warrantyUntil,\n      notes,\n      tags,\n      barcode,\n    } = await request.json()\n\n    if (!name || !category || !location) {\n      return NextResponse.json(\n        { error: 'Name, category, and location are required' },\n        { status: 400 }\n      )\n    }\n\n    // Check if serial number or barcode already exists\n    if (serialNumber) {\n      const existingAsset = await prisma.asset.findUnique({\n        where: { serialNumber },\n      })\n      if (existingAsset) {\n        return NextResponse.json(\n          { error: 'Asset with this serial number already exists' },\n          { status: 409 }\n        )\n      }\n    }\n\n    if (barcode) {\n      const existingAsset = await prisma.asset.findUnique({\n        where: { barcode },\n      })\n      if (existingAsset) {\n        return NextResponse.json(\n          { error: 'Asset with this barcode already exists' },\n          { status: 409 }\n        )\n      }\n    }\n\n    // Create asset\n    const asset = await prisma.asset.create({\n      data: {\n        name,\n        description,\n        category,\n        subcategory,\n        brand,\n        model,\n        serialNumber,\n        purchaseDate: purchaseDate ? new Date(purchaseDate) : null,\n        purchasePrice: purchasePrice ? parseFloat(purchasePrice) : null,\n        currentValue: currentValue ? parseFloat(currentValue) : null,\n        condition: condition || 'GOOD',\n        location,\n        department,\n        assignedTo,\n        warrantyUntil: warrantyUntil ? new Date(warrantyUntil) : null,\n        notes,\n        tags,\n        barcode,\n        createdById: (request as any).user.id,\n        updatedById: (request as any).user.id,\n      },\n      include: {\n        createdBy: {\n          select: {\n            id: true,\n            email: true,\n            firstName: true,\n            lastName: true,\n          },\n        },\n      },\n    })\n\n    // Log activity\n    const ipAddress = request.headers.get('x-forwarded-for') || \n                     request.headers.get('x-real-ip') || \n                     'unknown'\n    const userAgent = request.headers.get('user-agent') || 'unknown'\n\n    await logActivity(\n      (request as any).user.id,\n      'CREATE',\n      'Asset',\n      asset.id,\n      null,\n      { name, category, location },\n      ipAddress,\n      userAgent\n    )\n\n    return NextResponse.json({\n      asset,\n      message: 'Asset created successfully',\n    }, { status: 201 })\n  } catch (error) {\n    console.error('Create asset error:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n})\n\n// Get assets\nexport const GET = withAuth(async (request: NextRequest) => {\n  try {\n    const { searchParams } = new URL(request.url)\n    const page = parseInt(searchParams.get('page') || '1')\n    const limit = parseInt(searchParams.get('limit') || '10')\n    const search = searchParams.get('search') || ''\n    const category = searchParams.get('category') || ''\n    const condition = searchParams.get('condition') || ''\n    const location = searchParams.get('location') || ''\n    const isActive = searchParams.get('isActive')\n\n    const skip = (page - 1) * limit\n\n    const where = {\n      AND: [\n        search ? {\n          OR: [\n            { name: { contains: search, mode: 'insensitive' as const } },\n            { description: { contains: search, mode: 'insensitive' as const } },\n            { brand: { contains: search, mode: 'insensitive' as const } },\n            { model: { contains: search, mode: 'insensitive' as const } },\n            { serialNumber: { contains: search, mode: 'insensitive' as const } },\n            { barcode: { contains: search, mode: 'insensitive' as const } },\n          ],\n        } : {},\n        category ? { category: { contains: category, mode: 'insensitive' as const } } : {},\n        condition ? { condition: condition as any } : {},\n        location ? { location: { contains: location, mode: 'insensitive' as const } } : {},\n        // Default to showing only active assets unless explicitly requested otherwise\n        isActive !== null ? { isActive: isActive === 'true' } : { isActive: true },\n      ],\n    }\n\n    const [assets, total] = await Promise.all([\n      prisma.asset.findMany({\n        where,\n        include: {\n          createdBy: {\n            select: {\n              id: true,\n              email: true,\n              firstName: true,\n              lastName: true,\n            },\n          },\n          updatedBy: {\n            select: {\n              id: true,\n              email: true,\n              firstName: true,\n              lastName: true,\n            },\n          },\n        },\n        skip,\n        take: limit,\n        orderBy: { createdAt: 'desc' },\n      }),\n      prisma.asset.count({ where }),\n    ])\n\n    return NextResponse.json({\n      assets,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit),\n      },\n    })\n  } catch (error) {\n    console.error('Get assets error:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n})"],"names":[],"mappings":"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","debugId":null}}]
}