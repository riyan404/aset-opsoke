{"version":3,"sources":["turbopack:///[project]/src/app/dashboard/assets/page.tsx","turbopack:///[project]/src/components/ui/asset-detail-modal.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { useAuth } from '@/contexts/AuthContext'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Package, Plus, Search, Filter, Eye, Edit, Trash2 } from 'lucide-react'\nimport { ActionsDropdown, assetActions } from '@/components/ui/actions-dropdown'\nimport { AssetDetailModal } from '@/components/ui/asset-detail-modal'\nimport { DeleteConfirmationModal } from '@/components/ui/delete-confirmation-modal'\n\ninterface Asset {\n  id: string\n  name: string\n  description?: string\n  category: string\n  subcategory?: string\n  brand?: string\n  model?: string\n  serialNumber?: string\n  barcode?: string\n  condition: string\n  location: string\n  department?: string\n  assignedTo?: string\n  warrantyUntil?: string\n  notes?: string\n  tags?: string\n  isActive: boolean\n  createdAt: string\n  updatedAt: string\n  createdBy: {\n    firstName: string\n    lastName: string\n    email: string\n  }\n  updatedBy?: {\n    firstName: string\n    lastName: string\n    email: string\n  }\n}\n\ninterface ApiResponse {\n  assets: Asset[]\n  pagination: {\n    page: number\n    limit: number\n    total: number\n    pages: number\n  }\n}\n\nexport default function AssetsPage() {\n  const { token } = useAuth()\n  const router = useRouter()\n  const [assets, setAssets] = useState<Asset[]>([])\n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n  const [totalAssets, setTotalAssets] = useState(0)\n  const [selectedAsset, setSelectedAsset] = useState<Asset | null>(null)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [categoryFilter, setCategoryFilter] = useState('')\n  const [statusFilter, setStatusFilter] = useState('')\n  const [locationFilter, setLocationFilter] = useState('')\n  const [deleteModal, setDeleteModal] = useState<{\n    isOpen: boolean\n    asset: Asset | null\n    loading: boolean\n  }>({ isOpen: false, asset: null, loading: false })\n\n  useEffect(() => {\n    fetchAssets()\n  }, [currentPage, searchTerm, categoryFilter, statusFilter, locationFilter])\n\n  const fetchAssets = async () => {\n    try {\n      setLoading(true)\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        limit: '10',\n      })\n      \n      if (searchTerm) params.append('search', searchTerm)\n      if (categoryFilter) params.append('category', categoryFilter)\n      if (statusFilter) params.append('condition', statusFilter)\n      if (locationFilter) params.append('location', locationFilter)\n\n      const response = await fetch(`/api/assets?${params.toString()}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      if (response.ok) {\n        const data: ApiResponse = await response.json()\n        setAssets(data.assets)\n        setTotalPages(data.pagination.pages)\n        setTotalAssets(data.pagination.total)\n      }\n    } catch (error) {\n      console.error('Failed to fetch assets:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getConditionBadge = (condition: string) => {\n    const colors = {\n      EXCELLENT: 'bg-green-100 text-green-800',\n      GOOD: 'bg-blue-100 text-blue-800',\n      FAIR: 'bg-yellow-100 text-yellow-800',\n      POOR: 'bg-orange-100 text-orange-800',\n      DAMAGED: 'bg-red-100 text-red-800',\n      DISPOSED: 'bg-gray-100 text-gray-800',\n    }\n    return colors[condition as keyof typeof colors] || 'bg-gray-100 text-gray-800'\n  }\n\n  const getConditionText = (condition: string) => {\n    const translations = {\n      EXCELLENT: 'Sangat Baik',\n      GOOD: 'Baik',\n      FAIR: 'Cukup',\n      POOR: 'Buruk',\n      DAMAGED: 'Rusak',\n      DISPOSED: 'Dibuang',\n    }\n    return translations[condition as keyof typeof translations] || condition\n  }\n\n  const formatCurrency = (amount?: number) => {\n    if (!amount) return '-'\n    return new Intl.NumberFormat('id-ID', {\n      style: 'currency',\n      currency: 'IDR',\n    }).format(amount)\n  }\n\n  const handleViewAsset = async (id: string) => {\n    try {\n      const response = await fetch(`/api/assets/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      \n      if (response.ok) {\n        const data = await response.json()\n        setSelectedAsset(data.asset)\n        setIsModalOpen(true)\n      } else {\n        alert('Asset not found')\n      }\n    } catch (error) {\n      console.error('Error fetching asset details:', error)\n      alert('Failed to load asset details')\n    }\n  }\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false)\n    setSelectedAsset(null)\n  }\n\n  const handleEditAsset = (id: string) => {\n    router.push(`/dashboard/assets/${id}/edit`)\n  }\n\n  const handleDuplicateAsset = async (id: string) => {\n    if (!confirm('Apakah Anda yakin ingin menduplikasi aset ini?')) {\n      return\n    }\n    \n    try {\n      const response = await fetch(`/api/assets/${id}/duplicate`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      \n      if (response.ok) {\n        const data = await response.json()\n        // Refresh the assets list\n        fetchAssets()\n        alert(`Aset berhasil diduplikasi: ${data.asset.name}`)\n      } else {\n        const data = await response.json()\n        alert(data.error || 'Gagal menduplikasi aset')\n      }\n    } catch (error) {\n      console.error('Error duplicating asset:', error)\n      alert('Gagal menduplikasi aset')\n    }\n  }\n\n  const handleDeleteAsset = (id: string) => {\n    const asset = assets.find(a => a.id === id)\n    if (asset) {\n      setDeleteModal({ isOpen: true, asset, loading: false })\n    }\n  }\n\n  const confirmDeleteAsset = async () => {\n    if (!deleteModal.asset) return\n\n    try {\n      setDeleteModal(prev => ({ ...prev, loading: true }))\n      \n      const response = await fetch(`/api/assets/${deleteModal.asset.id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      \n      if (response.ok) {\n        // Refresh the assets list\n        fetchAssets()\n        setDeleteModal({ isOpen: false, asset: null, loading: false })\n        alert('Aset berhasil dihapus')\n      } else {\n        const data = await response.json()\n        alert(data.error || 'Gagal menghapus aset')\n      }\n    } catch (error) {\n      console.error('Error deleting asset:', error)\n      alert('Gagal menghapus aset')\n    } finally {\n      setDeleteModal(prev => ({ ...prev, loading: false }))\n    }\n  }\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return '-'\n    return new Date(dateString).toLocaleDateString('id-ID')\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Products</h1>\n          <p className=\"text-gray-600\">Kelola dan lacak aset perusahaan Anda</p>\n        </div>\n        <Button \n          className=\"bg-[#187F7E] hover:bg-[#00AAA8]\"\n          onClick={() => router.push('/dashboard/assets/new')}\n        >\n          <Plus className=\"w-4 h-4 mr-2\" />\n          Add Product\n        </Button>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-wrap gap-4 items-center\">\n          <div className=\"flex-1 min-w-[200px]\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\n              <Input\n                placeholder=\"Search products...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 border-gray-200\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex gap-2\">\n            <select \n              className=\"px-3 py-2 border border-gray-200 rounded-md text-sm\"\n              value={categoryFilter}\n              onChange={(e) => setCategoryFilter(e.target.value)}\n            >\n              <option value=\"\">All Categories</option>\n              <option value=\"Electronics\">Electronics</option>\n              <option value=\"Furniture\">Furniture</option>\n              <option value=\"Office\">Office</option>\n              <option value=\"IT\">IT</option>\n            </select>\n            <select \n              className=\"px-3 py-2 border border-gray-200 rounded-md text-sm\"\n              value={statusFilter}\n              onChange={(e) => setStatusFilter(e.target.value)}\n            >\n              <option value=\"\">All Status</option>\n              <option value=\"EXCELLENT\">Sangat Baik</option>\n              <option value=\"GOOD\">Baik</option>\n              <option value=\"FAIR\">Cukup</option>\n              <option value=\"POOR\">Buruk</option>\n              <option value=\"DAMAGED\">Rusak</option>\n              <option value=\"DISPOSED\">Dibuang</option>\n            </select>\n            <select \n              className=\"px-3 py-2 border border-gray-200 rounded-md text-sm\"\n              value={locationFilter}\n              onChange={(e) => setLocationFilter(e.target.value)}\n            >\n              <option value=\"\">All Locations</option>\n              <option value=\"Office\">Office</option>\n              <option value=\"Warehouse\">Warehouse</option>\n              <option value=\"Store\">Store</option>\n            </select>\n          </div>\n          \n          <Button \n            variant=\"outline\" \n            className=\"border-gray-200\"\n            onClick={() => {\n              setCategoryFilter('');\n              setStatusFilter('');\n              setLocationFilter('');\n              setSearchTerm('');\n            }}\n          >\n            <Filter className=\"w-4 h-4 mr-2\" />\n            Reset Filter\n          </Button>\n        </div>\n      </div>\n\n      {/* Assets List */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">Products</h2>\n            <p className=\"text-sm text-gray-500\">{totalAssets} items</p>\n          </div>\n        </div>\n        \n        {loading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <div className=\"w-8 h-8 border-4 border-[#187F7E] border-t-transparent rounded-full animate-spin\"></div>\n          </div>\n        ) : assets.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <Package className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <p className=\"text-gray-500\">Tidak ada aset ditemukan</p>\n          </div>\n        ) : (\n          <div>\n            {/* Table Header */}\n            <div className=\"hidden md:grid md:grid-cols-10 gap-4 px-6 py-3 bg-gray-50 border-b border-gray-200 text-sm font-medium text-gray-700\">\n              <div className=\"col-span-4\">Product Name</div>\n              <div className=\"col-span-2\">Category</div>\n              <div className=\"col-span-2\">Location</div>\n              <div className=\"col-span-2\">Action</div>\n            </div>\n\n            {/* Table Body */}\n            <div className=\"divide-y divide-gray-200\">\n              {assets.map((asset) => (\n                <div key={asset.id} className=\"p-6 hover:bg-gray-50 transition-colors\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-12 gap-4 items-center\">\n                    {/* Product Info */}\n                    <div className=\"col-span-4\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className=\"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center overflow-hidden\">\n                          <Package className=\"w-6 h-6 text-gray-400\" />\n                        </div>\n                        <div>\n                          <h3 className=\"font-medium text-gray-900\">{asset.name}</h3>\n                          <p className=\"text-sm text-gray-500\">\n                            {asset.brand} {asset.model}\n                          </p>\n                          {asset.serialNumber && (\n                            <p className=\"text-xs text-gray-400\">SN: {asset.serialNumber}</p>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Category */}\n                    <div className=\"col-span-2\">\n                      <p className=\"font-medium text-gray-900\">{asset.category}</p>\n                    </div>\n                    \n                    {/* Location */}\n                    <div className=\"col-span-2\">\n                      <p className=\"font-medium text-gray-900\">{asset.location}</p>\n                    </div>\n                    \n                    {/* Status */}\n                    <div className=\"col-span-2\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                        asset.condition === 'EXCELLENT' || asset.condition === 'GOOD' \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-yellow-100 text-yellow-800'\n                      }`}>\n                        ● {getConditionText(asset.condition)}\n                      </span>\n                    </div>\n                    \n                    {/* Actions */}\n                    <div className=\"col-span-2\">\n                      <ActionsDropdown \n                        items={assetActions(\n                          asset,\n                          handleViewAsset,\n                          handleEditAsset,\n                          handleDuplicateAsset,\n                          handleDeleteAsset\n                        )}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        {/* Pagination */}\n        {totalPages > 1 && (\n          <div className=\"flex items-center justify-center space-x-2 px-6 py-4 border-t border-gray-200\">\n            {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n              const pageNum = i + 1\n              return (\n                <button\n                  key={pageNum}\n                  onClick={() => setCurrentPage(pageNum)}\n                  className={`w-8 h-8 text-sm rounded ${\n                    currentPage === pageNum\n                      ? 'bg-[#187F7E] text-white'\n                      : 'text-gray-600 hover:bg-gray-100'\n                  }`}\n                >\n                  {pageNum}\n                </button>\n              )\n            })}\n            {totalPages > 5 && (\n              <span className=\"text-gray-400\">...</span>\n            )}\n            {totalPages > 5 && (\n              <button\n                onClick={() => setCurrentPage(totalPages)}\n                className={`w-8 h-8 text-sm rounded ${\n                  currentPage === totalPages\n                    ? 'bg-[#187F7E] text-white'\n                    : 'text-gray-600 hover:bg-gray-100'\n                }`}\n              >\n                {totalPages}\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Asset Detail Modal */}\n      {selectedAsset && (\n        <AssetDetailModal\n          asset={selectedAsset}\n          isOpen={isModalOpen}\n          onClose={handleCloseModal}\n        />\n      )}\n\n      {/* Delete Confirmation Modal */}\n      <DeleteConfirmationModal\n        isOpen={deleteModal.isOpen}\n        onClose={() => setDeleteModal({ isOpen: false, asset: null, loading: false })}\n        onConfirm={confirmDeleteAsset}\n        title=\"Delete Asset\"\n        message=\"Are you sure you want to delete this asset? This action cannot be undone.\"\n        itemName={deleteModal.asset?.name}\n        loading={deleteModal.loading}\n      />\n    </div>\n  )\n}","'use client'\n\nimport { useState } from 'react'\nimport { X, Package, MapPin, Calendar, User } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\n\ninterface Asset {\n  id: string\n  name: string\n  description?: string\n  category: string\n  subcategory?: string\n  brand?: string\n  model?: string\n  serialNumber?: string\n  barcode?: string\n  condition: string\n  location: string\n  department?: string\n  assignedTo?: string\n  warrantyUntil?: string\n  notes?: string\n  tags?: string\n  isActive: boolean\n  createdAt: string\n  updatedAt: string\n  createdBy: {\n    firstName: string\n    lastName: string\n    email: string\n  }\n}\n\ninterface AssetDetailModalProps {\n  asset: Asset\n  isOpen: boolean\n  onClose: () => void\n}\n\nexport function AssetDetailModal({ asset, isOpen, onClose }: AssetDetailModalProps) {\n  if (!isOpen) return null\n\n  const getConditionBadge = (condition: string) => {\n    const colors = {\n      EXCELLENT: 'bg-green-100 text-green-800',\n      GOOD: 'bg-blue-100 text-blue-800',\n      FAIR: 'bg-yellow-100 text-yellow-800',\n      POOR: 'bg-orange-100 text-orange-800',\n      DAMAGED: 'bg-red-100 text-red-800',\n      DISPOSED: 'bg-gray-100 text-gray-800',\n    }\n    return colors[condition as keyof typeof colors] || 'bg-gray-100 text-gray-800'\n  }\n\n  const getConditionText = (condition: string) => {\n    const translations = {\n      EXCELLENT: 'Sangat Baik',\n      GOOD: 'Baik',\n      FAIR: 'Cukup',\n      POOR: 'Buruk',\n      DAMAGED: 'Rusak',\n      DISPOSED: 'Dibuang',\n    }\n    return translations[condition as keyof typeof translations] || condition\n  }\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return '-'\n    return new Date(dateString).toLocaleDateString('id-ID', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    })\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-[#0EB6B4]/10 rounded-lg flex items-center justify-center\">\n              <Package className=\"w-5 h-5 text-[#187F7E]\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold text-gray-900\">{asset.name}</h2>\n              <p className=\"text-sm text-gray-600\">{asset.brand} {asset.model}</p>\n            </div>\n          </div>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={onClose}\n            className=\"p-2\"\n          >\n            <X className=\"w-4 h-4\" />\n          </Button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Left Column */}\n            <div className=\"space-y-6\">\n              {/* Basic Information */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <Package className=\"w-5 h-5 mr-2\" />\n                  Basic Information\n                </h3>\n                <div className=\"space-y-3\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-500\">Category</span>\n                      <p className=\"text-sm text-gray-900\">{asset.category}</p>\n                    </div>\n                    {asset.subcategory && (\n                      <div>\n                        <span className=\"text-sm font-medium text-gray-500\">Subcategory</span>\n                        <p className=\"text-sm text-gray-900\">{asset.subcategory}</p>\n                      </div>\n                    )}\n                  </div>\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-500\">Condition</span>\n                    <div className=\"mt-1\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getConditionBadge(asset.condition)}`}>\n                        {getConditionText(asset.condition)}\n                      </span>\n                    </div>\n                  </div>\n                  {asset.serialNumber && (\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-500\">Serial Number</span>\n                      <p className=\"text-sm text-gray-900 font-mono\">{asset.serialNumber}</p>\n                    </div>\n                  )}\n                  {asset.barcode && (\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-500\">Barcode</span>\n                      <p className=\"text-sm text-gray-900 font-mono\">{asset.barcode}</p>\n                    </div>\n                  )}\n                  {asset.description && (\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-500\">Description</span>\n                      <p className=\"text-sm text-gray-900\">{asset.description}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Location & Assignment */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <MapPin className=\"w-5 h-5 mr-2\" />\n                  Location & Assignment\n                </h3>\n                <div className=\"space-y-3\">\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-500\">Location</span>\n                    <p className=\"text-sm text-gray-900\">{asset.location}</p>\n                  </div>\n                  {asset.department && (\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-500\">Department</span>\n                      <p className=\"text-sm text-gray-900\">{asset.department}</p>\n                    </div>\n                  )}\n                  {asset.assignedTo && (\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-500\">Assigned To</span>\n                      <p className=\"text-sm text-gray-900\">{asset.assignedTo}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Right Column */}\n            <div className=\"space-y-6\">\n              {/* Important Dates */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <Calendar className=\"w-5 h-5 mr-2\" />\n                  Important Dates\n                </h3>\n                <div className=\"space-y-3\">\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-500\">Warranty Until</span>\n                    <p className=\"text-sm text-gray-900\">{formatDate(asset.warrantyUntil)}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-500\">Created</span>\n                    <p className=\"text-sm text-gray-900\">{formatDate(asset.createdAt)}</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Creator Information */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <User className=\"w-5 h-5 mr-2\" />\n                  Created By\n                </h3>\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 bg-[#0EB6B4]/10 rounded-full flex items-center justify-center\">\n                    <span className=\"text-[#187F7E] font-medium text-sm\">\n                      {asset.createdBy.firstName.charAt(0)}{asset.createdBy.lastName.charAt(0)}\n                    </span>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900\">\n                      {asset.createdBy.firstName} {asset.createdBy.lastName}\n                    </p>\n                    <p className=\"text-xs text-gray-500\">{asset.createdBy.email}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Additional Information */}\n          {(asset.notes || asset.tags) && (\n            <div className=\"mt-6 bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Additional Information</h3>\n              <div className=\"space-y-3\">\n                {asset.notes && (\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-500\">Notes</span>\n                    <p className=\"text-sm text-gray-900\">{asset.notes}</p>\n                  </div>\n                )}\n                {asset.tags && (\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-500\">Tags</span>\n                    <p className=\"text-sm text-gray-900\">{asset.tags}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-end p-6 border-t border-gray-200\">\n          <Button onClick={onClose} variant=\"outline\">\n            Close\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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"}