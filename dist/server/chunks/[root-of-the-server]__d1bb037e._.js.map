{"version":3,"sources":["turbopack:///[project]/src/lib/middleware.ts","turbopack:///[project]/src/lib/prisma.ts","turbopack:///[project]/src/lib/compression.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/src/app/api/compression-stats/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport jwt from 'jsonwebtoken'\n\nexport interface AuthenticatedRequest extends NextRequest {\n  user?: {\n    id: string\n    email: string\n    role: string\n    department?: string\n  }\n}\n\nexport function verifyToken(token: string) {\n  try {\n    return jwt.verify(token, process.env.JWT_SECRET!)\n  } catch (error) {\n    return null\n  }\n}\n\nexport function generateToken(payload: any) {\n  return jwt.sign(payload, process.env.JWT_SECRET!, { expiresIn: '1d' })\n}\n\nexport function withAuth(handler: (req: AuthenticatedRequest, context?: any) => Promise<NextResponse>) {\n  return async (req: AuthenticatedRequest, context?: any) => {\n    const authHeader = req.headers.get('authorization')\n    console.log('Middleware: Authorization header:', authHeader)\n    \n    const token = authHeader?.replace('Bearer ', '')\n    console.log('Middleware: Extracted token:', token ? 'Token exists' : 'No token')\n    \n    if (!token) {\n      console.log('Middleware: No token provided')\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n    }\n\n    const decoded = verifyToken(token) as any\n    console.log('Middleware: Token verification result:', decoded ? 'Valid' : 'Invalid')\n    \n    if (!decoded) {\n      console.log('Middleware: Invalid token')\n      return NextResponse.json({ error: 'Invalid token' }, { status: 401 })\n    }\n\n    req.user = decoded\n    return handler(req, context)\n  }\n}\n\nexport function withRole(roles: string[]) {\n  return function(handler: (req: AuthenticatedRequest, context?: any) => Promise<NextResponse>) {\n    return withAuth(async (req: AuthenticatedRequest, context?: any) => {\n      if (!req.user || !roles.includes(req.user.role)) {\n        return NextResponse.json({ error: 'Forbidden' }, { status: 403 })\n      }\n      return handler(req, context)\n    })\n  }\n}","import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  // Memory optimization: Configure connection pooling\n  datasources: {\n    db: {\n      url: process.env.DATABASE_URL\n    }\n  },\n  // Reduce memory usage with optimized logging\n  log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n  // Connection pool optimization for memory efficiency\n  __internal: {\n    engine: {\n      // Limit connection pool size to reduce memory usage\n      connectionLimit: 5,\n    }\n  }\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma","import fs from 'fs'\nimport path from 'path'\n\n// Smart PDF Compression Configuration\nconst COMPRESSION_LEVELS = {\n  // Office modern formats (DOCX, XLSX, PPTX) - already compressed\n  MODERN_OFFICE: {\n    compressionRate: 0.05, // 5% compression\n    description: 'Modern office formats are already compressed',\n  },\n  // Legacy office formats (DOC, XLS, PPT)\n  LEGACY_OFFICE: {\n    compressionRate: 0.3, // 30% compression \n    description: 'Legacy formats can be significantly compressed',\n  },\n  // Text files (TXT, RTF, CSV)\n  TEXT_FILES: {\n    compressionRate: 0.5, // 50% compression\n    description: 'Text files compress very well',\n  },\n  // PDF files\n  PDF_FILES: {\n    compressionRate: 0.15, // 15% compression\n    description: 'PDF optimization and compression',\n  },\n  // Default compression\n  DEFAULT: {\n    compressionRate: 0.1, // 10% compression\n    description: 'Standard compression for other file types',\n  },\n}\n\n// File type categorization\nconst FILE_TYPE_MAPPING = {\n  // Modern Office\n  '.docx': 'MODERN_OFFICE',\n  '.xlsx': 'MODERN_OFFICE',\n  '.pptx': 'MODERN_OFFICE',\n  \n  // Legacy Office\n  '.doc': 'LEGACY_OFFICE',\n  '.xls': 'LEGACY_OFFICE',\n  '.ppt': 'LEGACY_OFFICE',\n  '.rtf': 'LEGACY_OFFICE',\n  \n  // Text files\n  '.txt': 'TEXT_FILES',\n  '.csv': 'TEXT_FILES',\n  '.xml': 'TEXT_FILES',\n  '.json': 'TEXT_FILES',\n  \n  // PDF\n  '.pdf': 'PDF_FILES',\n}\n\nexport interface CompressionResult {\n  success: boolean\n  originalSize: number\n  compressedSize: number\n  compressionRate: number\n  savingsPercent: number\n  compressionType: string\n  filePath: string\n  error?: string\n}\n\nexport function getFileCompressionType(filename: string): string {\n  const extension = path.extname(filename).toLowerCase()\n  return FILE_TYPE_MAPPING[extension as keyof typeof FILE_TYPE_MAPPING] || 'DEFAULT'\n}\n\nexport function getCompressionConfig(compressionType: string) {\n  return COMPRESSION_LEVELS[compressionType as keyof typeof COMPRESSION_LEVELS] || COMPRESSION_LEVELS.DEFAULT\n}\n\n/**\n * Smart compression simulation\n * In a real implementation, this would use actual compression libraries\n * For now, we'll simulate compression by calculating expected file sizes\n */\nexport async function compressFile(filePath: string, filename: string): Promise<CompressionResult> {\n  try {\n    // Get file stats\n    const stats = fs.statSync(filePath)\n    const originalSize = stats.size\n    \n    // Determine compression type\n    const compressionType = getFileCompressionType(filename)\n    const config = getCompressionConfig(compressionType)\n    \n    // Simulate compression (in real implementation, use actual compression libraries)\n    const compressionRate = config.compressionRate\n    const estimatedCompressedSize = Math.floor(originalSize * (1 - compressionRate))\n    const savingsPercent = Math.round(compressionRate * 100)\n    \n    // For demonstration, we'll just log the compression details\n    // In a real implementation, you would:\n    // 1. For PDFs: Use pdf-lib or similar to optimize/compress\n    // 2. For Office files: Use libraries like node-office-compress\n    // 3. For text files: Use zlib or similar compression\n    \n    console.log(`üìÅ Smart Compression Analysis:`)\n    console.log(`   File: ${filename}`)\n    console.log(`   Type: ${compressionType}`)\n    console.log(`   Original size: ${formatFileSize(originalSize)}`)\n    console.log(`   Expected compressed: ${formatFileSize(estimatedCompressedSize)}`)\n    console.log(`   Estimated savings: ${savingsPercent}%`)\n    console.log(`   Strategy: ${config.description}`)\n    \n    return {\n      success: true,\n      originalSize,\n      compressedSize: estimatedCompressedSize,\n      compressionRate,\n      savingsPercent,\n      compressionType,\n      filePath,\n    }\n  } catch (error) {\n    console.error('Compression error:', error)\n    return {\n      success: false,\n      originalSize: 0,\n      compressedSize: 0,\n      compressionRate: 0,\n      savingsPercent: 0,\n      compressionType: 'ERROR',\n      filePath,\n      error: error instanceof Error ? error.message : 'Unknown compression error',\n    }\n  }\n}\n\n/**\n * Apply watermark to documents\n * For PDFs, this would embed watermark text\n * For other formats, this would be metadata or overlay\n */\nexport async function applyWatermark(\n  filePath: string, \n  filename: string, \n  watermarkText: string,\n  watermarkConfig: any\n): Promise<{ success: boolean; error?: string }> {\n  try {\n    const extension = path.extname(filename).toLowerCase()\n    \n    console.log(`üîñ Watermark Application:`)\n    console.log(`   File: ${filename}`)\n    console.log(`   Watermark: \"${watermarkText}\"`)\n    console.log(`   Position: ${watermarkConfig.position}`)\n    console.log(`   Opacity: ${watermarkConfig.opacity}`)\n    \n    // In a real implementation:\n    // - For PDFs: Use pdf-lib to add text watermarks\n    // - For images: Use sharp or jimp to overlay text\n    // - For Office docs: Modify document properties or add headers/footers\n    // - For text files: Add watermark as comment or header\n    \n    if (extension === '.pdf') {\n      // TODO: Implement actual PDF watermarking with pdf-lib\n      console.log(`   üìÑ PDF watermarking would be applied here`)\n    } else if (['.jpg', '.jpeg', '.png', '.gif'].includes(extension)) {\n      // TODO: Implement image watermarking with sharp\n      console.log(`   üñºÔ∏è  Image watermarking would be applied here`)\n    } else {\n      // For other file types, watermark could be applied as metadata\n      console.log(`   üìé Metadata watermarking would be applied here`)\n    }\n    \n    return { success: true }\n  } catch (error) {\n    console.error('Watermark error:', error)\n    return { \n      success: false, \n      error: error instanceof Error ? error.message : 'Unknown watermark error' \n    }\n  }\n}\n\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes'\n  \n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n/**\n * Get compression statistics for reporting\n */\nexport function getCompressionStats() {\n  return {\n    supportedFormats: Object.keys(FILE_TYPE_MAPPING),\n    compressionTypes: Object.keys(COMPRESSION_LEVELS),\n    averageCompressionRates: {\n      modernOffice: '5-15%',\n      legacyOffice: '20-40%',\n      textFiles: '30-70%',\n      pdfFiles: '10-25%',\n    },\n  }\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/compression-stats/route\",\n        pathname: \"/api/compression-stats\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/compression-stats/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/compression-stats/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextRequest, NextResponse } from 'next/server'\nimport { prisma } from '@/lib/prisma'\nimport { withRole } from '@/lib/middleware'\nimport { getFileCompressionType, getCompressionConfig, formatFileSize } from '@/lib/compression'\nimport path from 'path'\n\n// Get real compression statistics (Admin only)\nexport const GET = withRole(['ADMIN'])(async (request: NextRequest) => {\n  try {\n    // Get all documents from database\n    const documents = await prisma.document.findMany({\n      where: { isActive: true },\n      select: {\n        id: true,\n        fileName: true,\n        fileSize: true,\n        createdAt: true,\n      },\n    })\n\n    // Calculate compression statistics\n    let totalFiles = documents.length\n    let totalOriginalSize = 0\n    let totalCompressedSize = 0\n    let compressionByType: { [key: string]: {\n      count: number,\n      originalSize: number,\n      compressedSize: number,\n      savings: number\n    }} = {}\n\n    // Process each document\n    documents.forEach(doc => {\n      const compressionType = getFileCompressionType(doc.fileName)\n      const config = getCompressionConfig(compressionType)\n      const originalSize = doc.fileSize\n      const compressedSize = Math.floor(originalSize * (1 - config.compressionRate))\n      \n      totalOriginalSize += originalSize\n      totalCompressedSize += compressedSize\n\n      // Get friendly name for compression type\n      const friendlyName = getFriendlyCompressionTypeName(compressionType)\n      \n      if (!compressionByType[friendlyName]) {\n        compressionByType[friendlyName] = {\n          count: 0,\n          originalSize: 0,\n          compressedSize: 0,\n          savings: 0\n        }\n      }\n\n      compressionByType[friendlyName].count++\n      compressionByType[friendlyName].originalSize += originalSize\n      compressionByType[friendlyName].compressedSize += compressedSize\n    })\n\n    // Calculate savings percentages\n    Object.keys(compressionByType).forEach(type => {\n      const data = compressionByType[type]\n      const savings = data.originalSize > 0 \n        ? Math.round(((data.originalSize - data.compressedSize) / data.originalSize) * 100)\n        : 0\n      compressionByType[type].savings = savings\n    })\n\n    const totalSavings = totalOriginalSize - totalCompressedSize\n    const averageCompressionRate = totalOriginalSize > 0 \n      ? Math.round((totalSavings / totalOriginalSize) * 100)\n      : 0\n\n    const stats = {\n      totalFiles,\n      totalOriginalSize,\n      totalCompressedSize,\n      totalSavings,\n      averageCompressionRate,\n      compressionByType,\n    }\n\n    return NextResponse.json({ stats })\n  } catch (error) {\n    console.error('Get compression stats error:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n})\n\nfunction getFriendlyCompressionTypeName(type: string): string {\n  const mapping = {\n    'MODERN_OFFICE': 'Modern Office Files',\n    'LEGACY_OFFICE': 'Legacy Office Files', \n    'TEXT_FILES': 'Text Files',\n    'PDF_FILES': 'PDF Files',\n    'DEFAULT': 'Other Files'\n  }\n  return mapping[type as keyof typeof mapping] || 'Other Files'\n}"],"names":[],"mappings":"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","ignoreList":[3]}