{"version":3,"sources":["turbopack:///[project]/src/lib/middleware.ts","turbopack:///[project]/src/lib/prisma.ts","turbopack:///[project]/src/lib/audit.ts","turbopack:///[project]/src/lib/cache-headers.ts","turbopack:///[project]/src/app/api/users/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport jwt from 'jsonwebtoken'\n\nexport interface AuthenticatedRequest extends NextRequest {\n  user?: {\n    id: string\n    email: string\n    role: string\n    department?: string\n  }\n}\n\nexport function verifyToken(token: string) {\n  try {\n    return jwt.verify(token, process.env.JWT_SECRET!)\n  } catch (error) {\n    return null\n  }\n}\n\nexport function generateToken(payload: any) {\n  return jwt.sign(payload, process.env.JWT_SECRET!, { expiresIn: '1d' })\n}\n\nexport function withAuth(handler: (req: AuthenticatedRequest, context?: any) => Promise<NextResponse>) {\n  return async (req: AuthenticatedRequest, context?: any) => {\n    const authHeader = req.headers.get('authorization')\n    console.log('Middleware: Authorization header:', authHeader)\n    \n    const token = authHeader?.replace('Bearer ', '')\n    console.log('Middleware: Extracted token:', token ? 'Token exists' : 'No token')\n    \n    if (!token) {\n      console.log('Middleware: No token provided')\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n    }\n\n    const decoded = verifyToken(token) as any\n    console.log('Middleware: Token verification result:', decoded ? 'Valid' : 'Invalid')\n    \n    if (!decoded) {\n      console.log('Middleware: Invalid token')\n      return NextResponse.json({ error: 'Invalid token' }, { status: 401 })\n    }\n\n    req.user = decoded\n    return handler(req, context)\n  }\n}\n\nexport function withRole(roles: string[]) {\n  return function(handler: (req: AuthenticatedRequest, context?: any) => Promise<NextResponse>) {\n    return withAuth(async (req: AuthenticatedRequest, context?: any) => {\n      if (!req.user || !roles.includes(req.user.role)) {\n        return NextResponse.json({ error: 'Forbidden' }, { status: 403 })\n      }\n      return handler(req, context)\n    })\n  }\n}","import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  // Memory optimization: Configure connection pooling\n  datasources: {\n    db: {\n      url: process.env.DATABASE_URL\n    }\n  },\n  // Reduce memory usage with optimized logging\n  log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n  // Connection pool optimization for memory efficiency\n  __internal: {\n    engine: {\n      // Limit connection pool size to reduce memory usage\n      connectionLimit: 5,\n    }\n  }\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma","import { prisma } from '@/lib/prisma'\n\nexport async function logActivity(\n  userId: string,\n  action: string,\n  resource: string,\n  resourceId?: string,\n  oldValues?: any,\n  newValues?: any,\n  ipAddress?: string,\n  userAgent?: string\n) {\n  try {\n    await prisma.auditLog.create({\n      data: {\n        userId,\n        action,\n        resource,\n        resourceId,\n        oldValues: oldValues ? JSON.stringify(oldValues) : null,\n        newValues: newValues ? JSON.stringify(newValues) : null,\n        ipAddress,\n        userAgent,\n      },\n    })\n  } catch (error) {\n    console.error('Failed to log activity:', error)\n  }\n}","/**\n * Cache Headers Utility\n * Provides standardized cache control headers for different types of data\n */\n\nexport interface CacheConfig {\n  maxAge?: number;\n  sMaxAge?: number;\n  staleWhileRevalidate?: number;\n  mustRevalidate?: boolean;\n  noCache?: boolean;\n  noStore?: boolean;\n  private?: boolean;\n  public?: boolean;\n}\n\nexport class CacheHeaders {\n  /**\n   * No cache - for sensitive or frequently changing data\n   * Use for: user data, permissions, real-time data\n   */\n  static noCache(): Headers {\n    const headers = new Headers();\n    headers.set('Cache-Control', 'no-cache, no-store, must-revalidate, private');\n    headers.set('Pragma', 'no-cache');\n    headers.set('Expires', '0');\n    return headers;\n  }\n\n  /**\n   * Short cache - for data that changes moderately\n   * Use for: dashboard stats, notifications\n   */\n  static shortCache(maxAge: number = 300): Headers {\n    const headers = new Headers();\n    headers.set('Cache-Control', `public, max-age=${maxAge}, s-maxage=${maxAge}, stale-while-revalidate=60`);\n    return headers;\n  }\n\n  /**\n   * Medium cache - for semi-static data\n   * Use for: categories, departments, configurations\n   */\n  static mediumCache(maxAge: number = 1800): Headers {\n    const headers = new Headers();\n    headers.set('Cache-Control', `public, max-age=${maxAge}, s-maxage=${maxAge}, stale-while-revalidate=300`);\n    return headers;\n  }\n\n  /**\n   * Long cache - for static data\n   * Use for: static assets, rarely changing configurations\n   */\n  static longCache(maxAge: number = 86400): Headers {\n    const headers = new Headers();\n    headers.set('Cache-Control', `public, max-age=${maxAge}, s-maxage=${maxAge}, immutable`);\n    return headers;\n  }\n\n  /**\n   * Custom cache configuration\n   */\n  static custom(config: CacheConfig): Headers {\n    const headers = new Headers();\n    const directives: string[] = [];\n\n    if (config.noCache) {\n      directives.push('no-cache');\n    }\n    if (config.noStore) {\n      directives.push('no-store');\n    }\n    if (config.mustRevalidate) {\n      directives.push('must-revalidate');\n    }\n    if (config.private) {\n      directives.push('private');\n    }\n    if (config.public) {\n      directives.push('public');\n    }\n    if (config.maxAge !== undefined) {\n      directives.push(`max-age=${config.maxAge}`);\n    }\n    if (config.sMaxAge !== undefined) {\n      directives.push(`s-maxage=${config.sMaxAge}`);\n    }\n    if (config.staleWhileRevalidate !== undefined) {\n      directives.push(`stale-while-revalidate=${config.staleWhileRevalidate}`);\n    }\n\n    headers.set('Cache-Control', directives.join(', '));\n    \n    if (config.noCache) {\n      headers.set('Pragma', 'no-cache');\n      headers.set('Expires', '0');\n    }\n\n    return headers;\n  }\n\n  /**\n   * Merge cache headers with existing response headers\n   */\n  static mergeHeaders(response: Response, cacheHeaders: Headers): Response {\n    const newHeaders = new Headers(response.headers);\n    cacheHeaders.forEach((value, key) => {\n      newHeaders.set(key, value);\n    });\n\n    return new Response(response.body, {\n      status: response.status,\n      statusText: response.statusText,\n      headers: newHeaders,\n    });\n  }\n}\n\n/**\n * Cache Tags for Next.js revalidation\n */\nexport const CACHE_TAGS = {\n  USERS: 'users',\n  USER_PROFILE: 'user-profile',\n  PERMISSIONS: 'permissions',\n  DEPARTMENTS: 'departments',\n  CATEGORIES: 'categories',\n  ASSETS: 'assets',\n  DIGITAL_ASSETS: 'digital-assets',\n  DOCUMENTS: 'documents',\n  DASHBOARD: 'dashboard',\n  DASHBOARD_STATS: 'dashboard-stats',\n  AUDIT_LOGS: 'audit-logs',\n  NOTIFICATIONS: 'notifications',\n  WATERMARKS: 'watermarks',\n} as const;\n\nexport type CacheTag = typeof CACHE_TAGS[keyof typeof CACHE_TAGS];","import { NextRequest, NextResponse } from 'next/server'\nimport { prisma } from '@/lib/prisma'\nimport { withRole } from '@/lib/middleware'\nimport { logActivity } from '@/lib/audit'\nimport { CacheHeaders, CACHE_TAGS } from '@/lib/cache-headers'\nimport bcrypt from 'bcryptjs'\nimport { revalidateTag } from 'next/cache'\n\n// Get all users (Admin only)\nexport const GET = withRole(['ADMIN'])(async (request: NextRequest) => {\n  try {\n    const { searchParams } = new URL(request.url)\n    const page = parseInt(searchParams.get('page') || '1')\n    const limit = parseInt(searchParams.get('limit') || '10')\n    const search = searchParams.get('search') || ''\n    const role = searchParams.get('role') || ''\n\n    const skip = (page - 1) * limit\n\n    const where = {\n      AND: [\n        search ? {\n          OR: [\n            { email: { contains: search, mode: 'insensitive' as const } },\n            { username: { contains: search, mode: 'insensitive' as const } },\n            { firstName: { contains: search, mode: 'insensitive' as const } },\n            { lastName: { contains: search, mode: 'insensitive' as const } },\n          ],\n        } : {},\n        role ? { role: role as any } : {},\n      ],\n    }\n\n    const [users, total] = await Promise.all([\n      prisma.user.findMany({\n        where,\n        select: {\n          id: true,\n          email: true,\n          username: true,\n          firstName: true,\n          lastName: true,\n          role: true,\n          department: true,\n          isActive: true,\n          createdAt: true,\n          updatedAt: true,\n          lastLogin: true,\n        },\n        skip,\n        take: limit,\n        orderBy: { createdAt: 'desc' },\n      }),\n      prisma.user.count({ where }),\n    ])\n\n    const response = NextResponse.json({\n      users,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit),\n      },\n    })\n\n    // Apply no-cache headers for user data\n    const cacheHeaders = CacheHeaders.noCache()\n    cacheHeaders.forEach((value, key) => {\n      response.headers.set(key, value)\n    })\n\n    return response\n  } catch (error) {\n    console.error('Get users error:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n})\n\n// Create user (Admin only)\nexport const POST = withRole(['ADMIN'])(async (request: NextRequest) => {\n  try {\n    const {\n      email,\n      username,\n      password,\n      firstName,\n      lastName,\n      role = 'USER',\n      department,\n      isActive = true,\n    } = await request.json()\n\n    if (!email || !username || !password || !firstName || !lastName) {\n      return NextResponse.json(\n        { error: 'Email, username, password, firstName, and lastName are required' },\n        { status: 400 }\n      )\n    }\n\n    if (password.length < 6) {\n      return NextResponse.json(\n        { error: 'Password must be at least 6 characters long' },\n        { status: 400 }\n      )\n    }\n\n    // Check if user with email or username already exists\n    const existingUser = await prisma.user.findFirst({\n      where: {\n        OR: [\n          { email },\n          { username },\n        ],\n      },\n    })\n\n    if (existingUser) {\n      return NextResponse.json(\n        { error: existingUser.email === email \n          ? 'User with this email already exists' \n          : 'User with this username already exists'\n        },\n        { status: 409 }\n      )\n    }\n\n    // Hash password\n    const hashedPassword = await bcrypt.hash(password, 12)\n\n    // Create user\n    const user = await prisma.user.create({\n      data: {\n        email,\n        username,\n        password: hashedPassword,\n        firstName,\n        lastName,\n        role,\n        department,\n        isActive,\n      },\n      select: {\n        id: true,\n        email: true,\n        username: true,\n        firstName: true,\n        lastName: true,\n        role: true,\n        department: true,\n        position: true,\n        isActive: true,\n        createdAt: true,\n      },\n    })\n\n    // Log activity\n    const ipAddress = request.headers.get('x-forwarded-for') || \n                     request.headers.get('x-real-ip') || \n                     'unknown'\n    const userAgent = request.headers.get('user-agent') || 'unknown'\n\n    await logActivity(\n      (request as any).user.id,\n      'CREATE',\n      'User',\n      user.id,\n      null,\n      { email, username, firstName, lastName, role },\n      ipAddress,\n      userAgent\n    )\n\n    // Invalidate users cache\n    revalidateTag(CACHE_TAGS.USERS)\n\n    const response = NextResponse.json({\n      user,\n      message: 'User created successfully',\n    }, { status: 201 })\n\n    // Apply no-cache headers\n    const cacheHeaders = CacheHeaders.noCache()\n    cacheHeaders.forEach((value, key) => {\n      response.headers.set(key, value)\n    })\n\n    return response\n  } catch (error) {\n    console.error('Create user error:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n})","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/users/route\",\n        pathname: \"/api/users\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/users/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/users/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[5]}