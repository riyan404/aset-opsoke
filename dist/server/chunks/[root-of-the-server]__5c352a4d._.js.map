{"version":3,"sources":["turbopack:///[project]/src/lib/middleware.ts","turbopack:///[project]/src/lib/prisma.ts","turbopack:///[project]/src/lib/audit.ts","turbopack:///[project]/src/lib/permissions.ts","turbopack:///[project]/src/app/api/digital-assets/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport jwt from 'jsonwebtoken'\n\nexport interface AuthenticatedRequest extends NextRequest {\n  user?: {\n    id: string\n    email: string\n    role: string\n    department?: string\n  }\n}\n\nexport function verifyToken(token: string) {\n  try {\n    return jwt.verify(token, process.env.JWT_SECRET!)\n  } catch (error) {\n    return null\n  }\n}\n\nexport function generateToken(payload: any) {\n  return jwt.sign(payload, process.env.JWT_SECRET!, { expiresIn: '1d' })\n}\n\nexport function withAuth(handler: (req: AuthenticatedRequest, context?: any) => Promise<NextResponse>) {\n  return async (req: AuthenticatedRequest, context?: any) => {\n    const authHeader = req.headers.get('authorization')\n    console.log('Middleware: Authorization header:', authHeader)\n    \n    const token = authHeader?.replace('Bearer ', '')\n    console.log('Middleware: Extracted token:', token ? 'Token exists' : 'No token')\n    \n    if (!token) {\n      console.log('Middleware: No token provided')\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n    }\n\n    const decoded = verifyToken(token) as any\n    console.log('Middleware: Token verification result:', decoded ? 'Valid' : 'Invalid')\n    \n    if (!decoded) {\n      console.log('Middleware: Invalid token')\n      return NextResponse.json({ error: 'Invalid token' }, { status: 401 })\n    }\n\n    req.user = decoded\n    return handler(req, context)\n  }\n}\n\nexport function withRole(roles: string[]) {\n  return function(handler: (req: AuthenticatedRequest, context?: any) => Promise<NextResponse>) {\n    return withAuth(async (req: AuthenticatedRequest, context?: any) => {\n      if (!req.user || !roles.includes(req.user.role)) {\n        return NextResponse.json({ error: 'Forbidden' }, { status: 403 })\n      }\n      return handler(req, context)\n    })\n  }\n}","import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  // Memory optimization: Configure connection pooling\n  datasources: {\n    db: {\n      url: process.env.DATABASE_URL\n    }\n  },\n  // Reduce memory usage with optimized logging\n  log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n  // Connection pool optimization for memory efficiency\n  __internal: {\n    engine: {\n      // Limit connection pool size to reduce memory usage\n      connectionLimit: 5,\n    }\n  }\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma","import { prisma } from '@/lib/prisma'\n\nexport async function logActivity(\n  userId: string,\n  action: string,\n  resource: string,\n  resourceId?: string,\n  oldValues?: any,\n  newValues?: any,\n  ipAddress?: string,\n  userAgent?: string\n) {\n  try {\n    await prisma.auditLog.create({\n      data: {\n        userId,\n        action,\n        resource,\n        resourceId,\n        oldValues: oldValues ? JSON.stringify(oldValues) : null,\n        newValues: newValues ? JSON.stringify(newValues) : null,\n        ipAddress,\n        userAgent,\n      },\n    })\n  } catch (error) {\n    console.error('Failed to log activity:', error)\n  }\n}","import { PrismaClient } from '@prisma/client'\nimport { CacheManager } from './cache'\n\nconst prisma = new PrismaClient()\n\nexport interface PermissionCheck {\n  canRead: boolean\n  canWrite: boolean\n  canDelete: boolean\n}\n\n/**\n * Check if a user has specific permissions for a module\n * @param userDepartment - User's department\n * @param userRole - User's role (ADMIN, USER, VIEWER)\n * @param module - System module to check (ASSETS, DOCUMENTS, DIGITAL_ASSETS, etc.)\n * @returns Permission object with read, write, delete flags\n */\nexport async function checkUserPermissions(\n  userDepartment: string | null,\n  userRole: string,\n  module: string\n): Promise<PermissionCheck> {\n  try {\n    // Admin has full access to everything\n    if (userRole === 'ADMIN') {\n      return {\n        canRead: true,\n        canWrite: true,\n        canDelete: true\n      }\n    }\n\n    // Users without department have limited access\n    if (!userDepartment) {\n      return {\n        canRead: true,\n        canWrite: false,\n        canDelete: false\n      }\n    }\n\n    // Temporarily disable cache to fix hang issue\n    // const cacheKey = CacheManager.generatePermissionKey(userDepartment, userRole, module)\n    // const cachedPermission = CacheManager.getPermissions(cacheKey)\n    \n    // if (cachedPermission) {\n    //   return cachedPermission\n    // }\n\n    // Get department permissions from database with timeout\n    const permissionPromise = prisma.departmentPermission.findFirst({\n      where: {\n        department: userDepartment,\n        module: module as any,\n        isActive: true\n      }\n    })\n\n    const timeoutPromise = new Promise((_, reject) => \n      setTimeout(() => reject(new Error('Database query timeout')), 3000)\n    )\n\n    const permission = await Promise.race([permissionPromise, timeoutPromise]) as any\n\n    let result: PermissionCheck\n\n    if (!permission) {\n      // Default permissions if no specific permission is set\n      result = {\n        canRead: true, // Default read access\n        canWrite: false,\n        canDelete: false\n      }\n    } else {\n      result = {\n        canRead: permission.canRead,\n        canWrite: permission.canWrite,\n        canDelete: permission.canDelete\n      }\n    }\n\n    // Cache the result (temporarily disabled)\n    // CacheManager.setPermissions(cacheKey, result)\n\n    return result\n  } catch (error) {\n    console.error('Error checking user permissions:', error)\n    // Default to safe permissions on error\n    return {\n      canRead: true,\n      canWrite: false,\n      canDelete: false\n    }\n  }\n}\n\n/**\n * Check if user can read a specific module\n */\nexport async function canUserRead(userDepartment: string | null, userRole: string, module: string): Promise<boolean> {\n  const permissions = await checkUserPermissions(userDepartment, userRole, module)\n  return permissions.canRead\n}\n\n/**\n * Check if user can write/edit in a specific module\n */\nexport async function canUserWrite(userDepartment: string | null, userRole: string, module: string): Promise<boolean> {\n  const permissions = await checkUserPermissions(userDepartment, userRole, module)\n  return permissions.canWrite\n}\n\n/**\n * Check if user can delete in a specific module\n */\nexport async function canUserDelete(userDepartment: string | null, userRole: string, module: string): Promise<boolean> {\n  const permissions = await checkUserPermissions(userDepartment, userRole, module)\n  return permissions.canDelete\n}\n\n/**\n * Get all permissions for a department\n */\nexport async function getDepartmentPermissions(department: string) {\n  try {\n    const permissions = await prisma.departmentPermission.findMany({\n      where: {\n        department,\n        isActive: true\n      },\n      orderBy: {\n        module: 'asc'\n      }\n    })\n\n    // Convert to a map for easy lookup\n    const permissionMap: { [key: string]: PermissionCheck } = {}\n    permissions.forEach(perm => {\n      permissionMap[perm.module] = {\n        canRead: perm.canRead,\n        canWrite: perm.canWrite,\n        canDelete: perm.canDelete\n      }\n    })\n\n    return permissionMap\n  } catch (error) {\n    console.error('Error getting department permissions:', error)\n    return {}\n  }\n}\n\n/**\n * Create middleware function for API route protection\n */\nexport function withPermissionCheck(requiredModule: string, requiredAction: 'read' | 'write' | 'delete') {\n  return function (handler: Function) {\n    return async function (request: any, context?: any) {\n      try {\n        // Extract user from request (assuming JWT verification is done)\n        const user = (request as any).user\n        \n        if (!user) {\n          return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n            status: 401,\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n\n        // Check permissions\n        const permissions = await checkUserPermissions(user.department, user.role, requiredModule)\n        \n        let hasPermission = false\n        switch (requiredAction) {\n          case 'read':\n            hasPermission = permissions.canRead\n            break\n          case 'write':\n            hasPermission = permissions.canWrite\n            break\n          case 'delete':\n            hasPermission = permissions.canDelete\n            break\n        }\n\n        if (!hasPermission) {\n          return new Response(JSON.stringify({ error: 'Insufficient permissions' }), {\n            status: 403,\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n\n        // Call the original handler\n        return await handler(request, context)\n      } catch (error) {\n        console.error('Permission check error:', error)\n        return new Response(JSON.stringify({ error: 'Internal server error' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n    }\n  }\n}\n\n/**\n * System modules constants\n */\nexport const SYSTEM_MODULES = {\n  ASSETS: 'ASSETS',\n  DOCUMENTS: 'DOCUMENTS',\n  DIGITAL_ASSETS: 'DIGITAL_ASSETS',\n  USERS: 'USERS',\n  AUDIT_LOGS: 'AUDIT_LOGS',\n  REPORTS: 'REPORTS',\n  SETTINGS: 'SETTINGS'\n} as const","import { NextRequest, NextResponse } from 'next/server'\nimport { prisma } from '@/lib/prisma'\nimport { withAuth, withRole } from '@/lib/middleware'\nimport { logActivity } from '@/lib/audit'\nimport { checkUserPermissions, SYSTEM_MODULES } from '@/lib/permissions'\nimport { CacheManager } from '@/lib/cache'\n\n// GET /api/digital-assets - List all digital assets with filtering\nexport const GET = withAuth(async (request: NextRequest) => {\n  try {\n    const user = (request as any).user\n\n    const { searchParams } = new URL(request.url)\n    const page = parseInt(searchParams.get('page') || '1')\n    const limit = parseInt(searchParams.get('limit') || '12')\n    const search = searchParams.get('search') || ''\n    const aspectRatio = searchParams.get('aspectRatio') || ''\n    const department = searchParams.get('department') || ''\n\n    // Temporarily disable cache to fix loading issue\n    // const cacheKey = `digital-assets:${user.id}:${page}:${limit}:${search}:${aspectRatio}:${department}`\n    // const cachedResult = CacheManager.getDigitalAssets(cacheKey)\n    // if (cachedResult) {\n    //   const response = NextResponse.json(cachedResult)\n    //   response.headers.set('Cache-Control', 'public, max-age=300, s-maxage=600, stale-while-revalidate=86400')\n    //   response.headers.set('ETag', `\"${Buffer.from(cacheKey).toString('base64')}\"`)\n    //   response.headers.set('Vary', 'Accept-Encoding')\n    //   response.headers.set('X-Cache-Status', 'HIT')\n    //   return response\n    // }\n\n    // Check permissions with timeout\n    const permissionPromise = checkUserPermissions(\n      user.department,\n      user.role,\n      SYSTEM_MODULES.DIGITAL_ASSETS\n    )\n    \n    const timeoutPromise = new Promise((_, reject) => \n      setTimeout(() => reject(new Error('Permission check timeout')), 5000)\n    )\n    \n    const permissions = await Promise.race([permissionPromise, timeoutPromise]) as any\n\n    if (!permissions.canRead) {\n      return NextResponse.json({ error: 'Forbidden' }, { status: 403 })\n    }\n\n    const skip = (page - 1) * limit\n\n    // Build where clause\n    const where: any = {\n      isActive: true,\n    }\n\n    // Add search filter\n    if (search) {\n      where.OR = [\n        { contentName: { contains: search } },\n        { description: { contains: search } },\n        { tags: { contains: search } },\n      ]\n    }\n\n    // Add aspect ratio filter\n    if (aspectRatio) {\n      where.aspectRatio = aspectRatio\n    }\n\n    // Optional department filter (available for all users)\n    if (department && department !== 'all') {\n      where.department = department\n    }\n\n    // Optimize query by selecting only necessary fields and get total count\n    const [digitalAssets, total] = await Promise.all([\n      prisma.digitalAsset.findMany({\n        where,\n        select: {\n          id: true,\n          contentName: true,\n          description: true,\n          // Always load preview files for all pages\n          previewFile: true,\n          previewFileName: true,\n          previewFileSize: true,\n          aspectRatio: true,\n          googleDriveLink: true,\n          tags: true,\n          department: true,\n          createdAt: true,\n          updatedAt: true,\n          createdBy: {\n            select: {\n              firstName: true,\n              lastName: true,\n            },\n          },\n        },\n        orderBy: {\n          createdAt: 'desc',\n        },\n        skip,\n        take: limit,\n      }),\n      prisma.digitalAsset.count({ where })\n    ])\n\n    const result = {\n      digitalAssets,\n      pagination: {\n        page,\n        pages: Math.ceil(total / limit),\n        total,\n        limit,\n      },\n    }\n\n    // Cache the result with enhanced caching (temporarily disabled)\n    // CacheManager.setDigitalAssets(cacheKey, result)\n\n    // Return with optimized cache headers\n    const response = NextResponse.json(result)\n    response.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate')\n    response.headers.set('Pragma', 'no-cache')\n    response.headers.set('Expires', '0')\n    return response\n  } catch (error) {\n    console.error('Failed to fetch digital assets:', error)\n    return NextResponse.json(\n      { error: 'Failed to fetch digital assets' },\n      { status: 500 }\n    )\n  }\n})\n\n// POST /api/digital-assets - Create new digital asset\nexport const POST = withAuth(async (request: NextRequest) => {\n  try {\n    const user = (request as any).user\n\n    // Check if user can create digital assets\n    const permissions = await checkUserPermissions(user.department, user.role, SYSTEM_MODULES.DIGITAL_ASSETS)\n    if (!permissions.canWrite) {\n      return NextResponse.json(\n        { error: 'You do not have permission to create digital assets' },\n        { status: 403 }\n      )\n    }\n\n    const contentType = request.headers.get('content-type')\n    let data: any\n    let previewFileBuffer: string | null = null\n    let previewFileName: string | null = null\n    let previewFileSize: number | null = null\n\n    if (contentType?.includes('multipart/form-data')) {\n      // Handle FormData (with file upload)\n      const formData = await request.formData()\n      const previewFile = formData.get('previewFile') as File | null\n      \n      data = {\n        contentName: formData.get('contentName') as string,\n        description: formData.get('description') as string,\n        aspectRatio: formData.get('aspectRatio') as string,\n        googleDriveLink: formData.get('googleDriveLink') as string,\n        tags: formData.get('tags') as string,\n        department: formData.get('department') as string,\n      }\n\n      // Process uploaded file if present\n      if (previewFile && previewFile.size > 0) {\n        // Convert file to base64 for storage\n        const bytes = await previewFile.arrayBuffer()\n        const buffer = Buffer.from(bytes)\n        previewFileBuffer = buffer.toString('base64')\n        previewFileName = previewFile.name\n        previewFileSize = previewFile.size\n      }\n    } else {\n      // Handle JSON data (legacy support)\n      data = await request.json()\n      previewFileBuffer = data.previewFile\n      previewFileName = data.previewFileName\n      previewFileSize = data.previewFileSize\n    }\n\n    const {\n      contentName,\n      description,\n      aspectRatio,\n      googleDriveLink,\n      tags,\n      department,\n    } = data\n\n    // Validate required fields\n    if (!contentName || !aspectRatio) {\n      return NextResponse.json(\n        { error: 'Content name and aspect ratio are required' },\n        { status: 400 }\n      )\n    }\n\n    // Validate aspect ratio\n    if (!['RATIO_4_3', 'RATIO_9_16'].includes(aspectRatio)) {\n      return NextResponse.json(\n        { error: 'Invalid aspect ratio. Must be RATIO_4_3 or RATIO_9_16' },\n        { status: 400 }\n      )\n    }\n\n    // Create digital asset\n    const digitalAsset = await prisma.digitalAsset.create({\n      data: {\n        contentName,\n        description,\n        aspectRatio,\n        googleDriveLink,\n        previewFile: previewFileBuffer,\n        previewFileName,\n        previewFileSize,\n        tags,\n        department: department || user.department || 'Digital', // Default to 'Digital' if no department\n        createdById: user.id,\n        updatedById: user.id,\n      },\n      include: {\n        createdBy: {\n          select: {\n            id: true,\n            firstName: true,\n            lastName: true,\n            email: true,\n          },\n        },\n        updatedBy: {\n          select: {\n            id: true,\n            firstName: true,\n            lastName: true,\n            email: true,\n          },\n        },\n      },\n    })\n\n    // Log activity\n    const ipAddress = request.headers.get('x-forwarded-for') || \n                     request.headers.get('x-real-ip') || \n                     'unknown'\n    \n    await logActivity(\n      user.id,\n      'CREATE_DIGITAL_ASSET',\n      'DigitalAsset',\n      digitalAsset.id,\n      null,\n      digitalAsset,\n      ipAddress,\n      request.headers.get('user-agent') || 'unknown'\n    )\n\n    return NextResponse.json({ digitalAsset }, { status: 201 })\n  } catch (error) {\n    console.error('Failed to create digital asset:', error)\n    return NextResponse.json(\n      { error: 'Failed to create digital asset' },\n      { status: 500 }\n    )\n  }\n})","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/digital-assets/route\",\n        pathname: \"/api/digital-assets\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/digital-assets/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/digital-assets/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[5]}