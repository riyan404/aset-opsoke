// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/dashboard" | "/dashboard/archive-reports" | "/dashboard/assets" | "/dashboard/assets/[id]" | "/dashboard/assets/[id]/edit" | "/dashboard/assets/new" | "/dashboard/audit" | "/dashboard/categories" | "/dashboard/compression-stats" | "/dashboard/digital-assets" | "/dashboard/digital-assets/[id]/edit" | "/dashboard/digital-assets/new" | "/dashboard/documents" | "/dashboard/documents/[id]/edit" | "/dashboard/documents/upload" | "/dashboard/settings" | "/dashboard/users" | "/dashboard/users/[id]" | "/dashboard/users/[id]/edit" | "/dashboard/users/new" | "/dashboard/watermarks" | "/login"
type AppRouteHandlerRoutes = "/api/archive-reports" | "/api/assets" | "/api/assets/[id]" | "/api/assets/[id]/duplicate" | "/api/assets/[id]/maintenance" | "/api/audit-logs" | "/api/auth/login" | "/api/auth/logout" | "/api/auth/me" | "/api/auth/register" | "/api/backup" | "/api/backup/config" | "/api/backup/cron" | "/api/backup/download/[filename]" | "/api/categories" | "/api/categories/[id]" | "/api/categories/assets" | "/api/compression-stats" | "/api/dashboard/stats" | "/api/departments" | "/api/departments/[id]/permissions" | "/api/digital-assets" | "/api/digital-assets/[id]" | "/api/digital-assets/upload" | "/api/documents" | "/api/documents/[id]" | "/api/documents/[id]/archive" | "/api/documents/[id]/download" | "/api/documents/[id]/share" | "/api/email" | "/api/health" | "/api/permissions" | "/api/permissions/digital-assets" | "/api/user/notifications" | "/api/user/profile" | "/api/users" | "/api/users/[id]" | "/api/users/[id]/toggle-status" | "/api/watermarks" | "/api/watermarks/[department]"
type PageRoutes = never
type LayoutRoutes = "/" | "/dashboard"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/archive-reports": {}
  "/api/assets": {}
  "/api/assets/[id]": { "id": string; }
  "/api/assets/[id]/duplicate": { "id": string; }
  "/api/assets/[id]/maintenance": { "id": string; }
  "/api/audit-logs": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/me": {}
  "/api/auth/register": {}
  "/api/backup": {}
  "/api/backup/config": {}
  "/api/backup/cron": {}
  "/api/backup/download/[filename]": { "filename": string; }
  "/api/categories": {}
  "/api/categories/[id]": { "id": string; }
  "/api/categories/assets": {}
  "/api/compression-stats": {}
  "/api/dashboard/stats": {}
  "/api/departments": {}
  "/api/departments/[id]/permissions": { "id": string; }
  "/api/digital-assets": {}
  "/api/digital-assets/[id]": { "id": string; }
  "/api/digital-assets/upload": {}
  "/api/documents": {}
  "/api/documents/[id]": { "id": string; }
  "/api/documents/[id]/archive": { "id": string; }
  "/api/documents/[id]/download": { "id": string; }
  "/api/documents/[id]/share": { "id": string; }
  "/api/email": {}
  "/api/health": {}
  "/api/permissions": {}
  "/api/permissions/digital-assets": {}
  "/api/user/notifications": {}
  "/api/user/profile": {}
  "/api/users": {}
  "/api/users/[id]": { "id": string; }
  "/api/users/[id]/toggle-status": { "id": string; }
  "/api/watermarks": {}
  "/api/watermarks/[department]": { "department": string; }
  "/dashboard": {}
  "/dashboard/archive-reports": {}
  "/dashboard/assets": {}
  "/dashboard/assets/[id]": { "id": string; }
  "/dashboard/assets/[id]/edit": { "id": string; }
  "/dashboard/assets/new": {}
  "/dashboard/audit": {}
  "/dashboard/categories": {}
  "/dashboard/compression-stats": {}
  "/dashboard/digital-assets": {}
  "/dashboard/digital-assets/[id]/edit": { "id": string; }
  "/dashboard/digital-assets/new": {}
  "/dashboard/documents": {}
  "/dashboard/documents/[id]/edit": { "id": string; }
  "/dashboard/documents/upload": {}
  "/dashboard/settings": {}
  "/dashboard/users": {}
  "/dashboard/users/[id]": { "id": string; }
  "/dashboard/users/[id]/edit": { "id": string; }
  "/dashboard/users/new": {}
  "/dashboard/watermarks": {}
  "/login": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
